Agent vending_machine
	Vars:
		vm_state: {Boil, Choose, Tea, Coffee};

	end Vars
	
	Actions = {choose_tea, choose_coffee, boil_repeatedly, pick, serve_tea, serve_coffee};
	
	Protocol:
		vm_state=Boil: {boil_repeatedly, pick};
		vm_state=Choose: {choose_tea, choose_coffee};
		vm_state=Tea: {serve_tea};
		vm_state=Coffee: {serve_coffee};
	end Protocol
	
	Evolution:
		vm_state=Boil if ((Action=boil_repeatedly) or (Action=serve_tea) or (Action=serve_coffee));
		vm_state=Choose if (Action= pick);
		vm_state=Tea if (Action=choose_tea);
		vm_state=Coffee if (Action=choose_coffee);
	end Evolution
end Agent

Evaluation
	Boil if vending_machine.vm_state=Boil;
	choose if vending_machine.vm_state=Choose;
	Tea if vending_machine.vm_state=Tea;
	Coffee if vending_machine.vm_state=Coffee;
end Evaluation

InitStates
	( 
	(vending_machine.vm_state=Boil)
	);
end InitStates

Groups
	g1={vending_machine};
end Groups

Fairness

end Fairness

Formulae
	-- modello chiuso
	AG(EF(Tea));
	AG(EF(Coffee));
end Formulae